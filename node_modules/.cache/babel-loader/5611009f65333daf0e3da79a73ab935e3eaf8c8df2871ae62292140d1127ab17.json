{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\zad8r\\\\React-ManageStudents-main\\\\src\\\\EditStudent.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditStudent({\n  student\n}) {\n  _s();\n  const [Backupstudent, changeStudentData] = useState({\n    name: student.Name,\n    surname: student.Surname,\n    index_nr: student.Surname,\n    dataUrodzenia: student.dataUrodzenia,\n    adres: '',\n    grupa: '',\n    stypendium: 0,\n    marks: []\n  });\n  const changeValue = e => {\n    console.log(student.Name);\n    const Value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n    switch (name) {\n      case 'name':\n        student.Name = Value;\n        break;\n      case 'surname':\n        student.Surname = Value;\n        break;\n      case 'index':\n        let numberifiedValue = +Value;\n        student.Index_nr = numberifiedValue;\n        break;\n    }\n  };\n  const BOP = () => {\n    console.log(\"BLAM\");\n  };\n  const Rewind = () => {\n    student.Name = Backupstudent.name;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: student.Name,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this), \"Surname in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"surname\",\n      value: student.Surname,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this), \"Index in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"index\",\n      value: student.Index_nr,\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }, this), \"Date of birth in edit mode: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"birthdate\",\n      onChange: e => changeValue(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => BOP(),\n      children: \"Confirm edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Rewind(),\n      children: \"Cancel edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(EditStudent, \"i2noeMXgaVQrMEqc+m9binkaRFs=\");\n_c = EditStudent;\nvar _c;\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","EditStudent","student","_s","Backupstudent","changeStudentData","name","Name","surname","Surname","index_nr","dataUrodzenia","adres","grupa","stypendium","marks","changeValue","e","console","log","Value","currentTarget","value","numberifiedValue","Index_nr","BOP","Rewind","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/zad8r/React-ManageStudents-main/src/EditStudent.tsx"],"sourcesContent":["\r\nimport { useState } from 'react';\r\nimport { StudentClass } from './types/Student';\r\n\r\n\r\ntype StudentStateType={\r\n    backup_student:StudentClass;\r\n   \r\n}\r\n\r\ntype StudentPropsType={\r\n \r\n    student:StudentClass;\r\n  }\r\n\r\nexport default function EditStudent({student}: StudentPropsType): React.ReactElement {\r\n    const [Backupstudent, changeStudentData]=useState({\r\n        name: student.Name, surname: student.Surname, index_nr: student.Surname, dataUrodzenia: student.dataUrodzenia, adres: '', grupa: '', stypendium: 0,\r\n        marks: []\r\n      });\r\n      \r\n\r\n      const changeValue=(e:React.FormEvent<HTMLInputElement>):void =>{\r\n       console.log(student.Name)\r\n      const Value = e.currentTarget.value;\r\n      const name=e.currentTarget.name;\r\n      switch(name) \r\n      {\r\n        case 'name':student.Name=Value;break;\r\n        case 'surname':student.Surname=Value;break;\r\n        case 'index':\r\n            let numberifiedValue: number = +Value\r\n            student.Index_nr=numberifiedValue;\r\n            break;\r\n      }\r\n\r\n        \r\n    }\r\n\r\n\r\n    const BOP=():void=>{\r\n    console.log(\"BLAM\")\r\n }\r\n\r\n    const Rewind=():void=>{\r\n     student.Name = Backupstudent.name;\r\n    }\r\n\r\n    return (\r\n    \r\n        <div>\r\n       \r\n        Name in edit mode: <input type='text' name=\"name\" value = {student.Name} onChange={(e)=>changeValue(e)}/>\r\n        Surname in edit mode: <input type='text' name=\"surname\" value={student.Surname} onChange={(e)=>changeValue(e)}/>\r\n        Index in edit mode: <input type='number' name=\"index\" value={student.Index_nr} onChange={(e)=>changeValue(e)}/>\r\n        Date of birth in edit mode: <input type='date' name=\"birthdate\" onChange={(e)=>changeValue(e)}/>\r\n        <button onClick={()=>BOP()}>Confirm edit</button>\r\n        <button onClick={()=>Rewind()}>Cancel edit</button>\r\n      </div>\r\n    \r\n    \r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}