{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\zad8r\\\\React-ManageStudents-main\\\\src\\\\Students.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { StudentClass } from './types/Student';\nimport AddStudent from './AddStudent';\nimport EditStudent from './EditStudent';\nimport StudentName from './StudentName';\nimport StudentSurname from './StudentSurname';\nimport StudentIndex from './StudentIndex';\nimport StudentAdres from './StudentAdres';\nimport StudentDate from './StudentDate';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Students() {\n  _s();\n  const listTitle = 'Students list';\n  const [studentList, updateList] = useState([new StudentClass('Ala', 'Makota', 123485, new Date('2000-01-21')), new StudentClass('Jan', 'Kowlaski', 2345, new Date('1999-10-23')), new StudentClass('Adrian', 'Duda', 156789, new Date('2001-04-01'))]);\n  const [showAddForm, changeValue] = useState(false);\n  const [showEditForm, changeEditVisibility] = useState(false);\n  const addNewStudent = student => {\n    changeValue(false);\n    console.log(\"add fn invoked\");\n    //studentList.push(student);\n    let students = [...studentList];\n    students.push(student);\n    updateList(students);\n  };\n  function Test() {\n    changeEditVisibility(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [listTitle, studentList.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentList.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(StudentName, {\n            student: el.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(StudentSurname, {\n            student: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(StudentIndex, {\n            student: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(StudentAdres, {\n            student: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(StudentDate, {\n            student: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => Test(),\n            children: \"Edit student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)]\n        }, el.Index_nr, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), studentList.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No students stored\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 34\n    }, this), !showAddForm && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeValue(true),\n      children: \"Add student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddStudent, {\n      addFn: addNewStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditStudent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n}\n_s(Students, \"5AJblqFmCrWzM977lMrB9etiwkE=\");\n_c = Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["useState","StudentClass","AddStudent","EditStudent","StudentName","StudentSurname","StudentIndex","StudentAdres","StudentDate","jsxDEV","_jsxDEV","Fragment","_Fragment","Students","_s","listTitle","studentList","updateList","Date","showAddForm","changeValue","showEditForm","changeEditVisibility","addNewStudent","student","console","log","students","push","Test","children","length","map","el","Name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Index_nr","addFn","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/zad8r/React-ManageStudents-main/src/Students.tsx"],"sourcesContent":["import { MouseEventHandler, useState } from 'react';\r\nimport Student from './Student';\r\nimport { StudentClass, StudentType } from './types/Student';\r\nimport AddStudent from './AddStudent';\r\nimport EditStudent from './EditStudent';\r\nimport StudentName from './StudentName';\r\nimport StudentSurname from './StudentSurname'; \r\nimport StudentIndex from './StudentIndex';\r\nimport StudentAdres from './StudentAdres';\r\nimport StudentDate from './StudentDate';\r\n\r\nexport default function Students() {\r\n  const listTitle = 'Students list';\r\n  const [studentList,updateList]=useState([\r\n    new StudentClass('Ala', 'Makota', 123485, new Date('2000-01-21')),\r\n    new StudentClass('Jan', 'Kowlaski', 2345, new Date('1999-10-23')),\r\n    new StudentClass('Adrian', 'Duda', 156789, new Date('2001-04-01'))\r\n  ]);\r\n  const [showAddForm,changeValue]=useState(false);\r\n  const [showEditForm, changeEditVisibility]=useState(false);\r\n\r\n  const addNewStudent=(student:StudentClass)=>{\r\n    changeValue(false)\r\n    console.log(\"add fn invoked\")\r\n    //studentList.push(student);\r\n    let students=[...studentList];\r\n    students.push(student)\r\n    updateList(students)\r\n  }\r\n\r\n   function Test(): void {\r\n       changeEditVisibility(true)\r\n    }\r\n\r\n   \r\n\r\n\r\n  return (\r\n    \r\n    <>\r\n      {listTitle}\r\n      {studentList.length>0 &&\r\n      <ul>\r\n      {studentList.map((el) => {return <li key={el.Index_nr}>\r\n        <StudentName student= {el.Name} /> \r\n        <StudentSurname student={el} /> \r\n        <StudentIndex student={el} /> \r\n        <StudentAdres student={el} /> \r\n        <StudentDate student={el} /> \r\n        <button onClick={()=>Test()}>Edit student</button></li>\r\n     \r\n      \r\n})}\r\n\r\n      </ul>}\r\n      {studentList.length===0 && <p>No students stored</p>}\r\n      {!showAddForm &&\r\n      <button onClick={()=>changeValue(true)}>Add student</button>\r\n      }\r\n{showAddForm && <AddStudent addFn={addNewStudent}/>}\r\n   \r\n    {showEditForm && <EditStudent></EditStudent>}\r\n       </>\r\n  );\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}